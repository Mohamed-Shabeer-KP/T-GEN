/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import com.google.auth.oauth2.GoogleCredentials;
import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import static java.awt.SystemColor.window;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.File;
import java.util.*;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.SwingWorker;
import javax.swing.border.LineBorder;
import operations.inputdata;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


/**
 *
 * @author khsci5mca16126
 */
public class DatabaseOp extends javax.swing.JFrame {
   
    int flag=0;
  
    List<JTextField> subject_name_list = new ArrayList<>();
    List<JComboBox> subject_hours_list = new ArrayList<>();
 
     
     
     int stg_count=0,teacher_count=0;
     String stg_name="";
      JProgressBar pb;
      JButton b1;
      
     
     
      
     
  
    /**
     * Creates new form gen_time_table
     */
    public DatabaseOp() {
        initComponents();
       
        //panel.setBorder(LineBorder.createBlackLineBorder());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        viewstudent_panel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cb_view_sg = new javax.swing.JComboBox<>();
        b_submit_view_sg = new javax.swing.JButton();
        b_reset_view_sg = new javax.swing.JButton();
        viewteacher_panel = new javax.swing.JPanel();
        p_view_teacher = new javax.swing.JPanel();
        viewdaysperweek_panel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        t_view_dpw = new javax.swing.JTextField();
        hoursperday_panel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        t_view_hpd = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        p_view_sg = new javax.swing.JPanel();
        insert_panel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        add_studpanel = new javax.swing.JPanel();
        add_stud = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        t_std_grp_name = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cb_no_subjects = new javax.swing.JComboBox<>();
        b_submit_sg = new javax.swing.JButton();
        b_reset_sg = new javax.swing.JButton();
        add_teachpanel = new javax.swing.JPanel();
        add_teach = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        t_teacher_name = new javax.swing.JTextField();
        cb_add_subject = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel11 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        days_perweekpanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        hours_perdaypanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        remove_studpanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        remove_teachpanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        cb_remove_teacher = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1000, 550));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jpanelmouse_dragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jpanelmouse_pressed(evt);
            }
        });

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jPanel16.setBackground(new java.awt.Color(51, 51, 51));
        jPanel16.setPreferredSize(new java.awt.Dimension(230, 440));

        jButton15.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButton15.setText("View Student group");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButton16.setText("View Teachers");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButton17.setText("View Days per Week ");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButton18.setText("View Hours per Day");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jButton15)
                .addGap(43, 43, 43)
                .addComponent(jButton16)
                .addGap(74, 74, 74)
                .addComponent(jButton17)
                .addGap(52, 52, 52)
                .addComponent(jButton18)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jLayeredPane4.setVisible(false);

        viewstudent_panel.setBackground(new java.awt.Color(102, 102, 102));
        viewstudent_panel.setPreferredSize(new java.awt.Dimension(280, 440));

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Student Group name");

        b_submit_view_sg.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        b_submit_view_sg.setText("Submit");
        b_submit_view_sg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_submit_view_sgActionPerformed(evt);
            }
        });

        b_reset_view_sg.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        b_reset_view_sg.setText("Reset");
        b_reset_view_sg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_reset_view_sgActionPerformed(evt);
            }
        });
        b_reset_view_sg.setVisible(false);

        javax.swing.GroupLayout viewstudent_panelLayout = new javax.swing.GroupLayout(viewstudent_panel);
        viewstudent_panel.setLayout(viewstudent_panelLayout);
        viewstudent_panelLayout.setHorizontalGroup(
            viewstudent_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewstudent_panelLayout.createSequentialGroup()
                .addGroup(viewstudent_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewstudent_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(cb_view_sg, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(viewstudent_panelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(b_submit_view_sg)
                        .addGap(52, 52, 52)
                        .addComponent(b_reset_view_sg)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        viewstudent_panelLayout.setVerticalGroup(
            viewstudent_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewstudent_panelLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addGroup(viewstudent_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cb_view_sg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88)
                .addGroup(viewstudent_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_submit_view_sg)
                    .addComponent(b_reset_view_sg))
                .addContainerGap(148, Short.MAX_VALUE))
        );

        viewteacher_panel.setBackground(new java.awt.Color(102, 102, 102));
        viewteacher_panel.setPreferredSize(new java.awt.Dimension(280, 440));

        p_view_teacher.setPreferredSize(new java.awt.Dimension(280, 440));
        p_view_teacher.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout viewteacher_panelLayout = new javax.swing.GroupLayout(viewteacher_panel);
        viewteacher_panel.setLayout(viewteacher_panelLayout);
        viewteacher_panelLayout.setHorizontalGroup(
            viewteacher_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewteacher_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(p_view_teacher, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
        );
        viewteacher_panelLayout.setVerticalGroup(
            viewteacher_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewteacher_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(p_view_teacher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        viewdaysperweek_panel.setBackground(new java.awt.Color(102, 102, 102));
        viewdaysperweek_panel.setPreferredSize(new java.awt.Dimension(280, 440));

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Days per Week");

        t_view_dpw.setEditable(false);

        javax.swing.GroupLayout viewdaysperweek_panelLayout = new javax.swing.GroupLayout(viewdaysperweek_panel);
        viewdaysperweek_panel.setLayout(viewdaysperweek_panelLayout);
        viewdaysperweek_panelLayout.setHorizontalGroup(
            viewdaysperweek_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewdaysperweek_panelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel14)
                .addGap(32, 32, 32)
                .addComponent(t_view_dpw, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        viewdaysperweek_panelLayout.setVerticalGroup(
            viewdaysperweek_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewdaysperweek_panelLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addGroup(viewdaysperweek_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(t_view_dpw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(246, Short.MAX_VALUE))
        );

        hoursperday_panel.setBackground(new java.awt.Color(102, 102, 102));
        hoursperday_panel.setPreferredSize(new java.awt.Dimension(280, 440));

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Hours per Day");

        t_view_hpd.setEditable(false);
        t_view_hpd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_view_hpdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hoursperday_panelLayout = new javax.swing.GroupLayout(hoursperday_panel);
        hoursperday_panel.setLayout(hoursperday_panelLayout);
        hoursperday_panelLayout.setHorizontalGroup(
            hoursperday_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hoursperday_panelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel17)
                .addGap(37, 37, 37)
                .addComponent(t_view_hpd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        hoursperday_panelLayout.setVerticalGroup(
            hoursperday_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hoursperday_panelLayout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addGroup(hoursperday_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(t_view_hpd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(247, Short.MAX_VALUE))
        );

        jLayeredPane4.setLayer(viewstudent_panel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(viewteacher_panel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(viewdaysperweek_panel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(hoursperday_panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(viewstudent_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(viewteacher_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(viewdaysperweek_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hoursperday_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(viewstudent_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(viewteacher_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(viewdaysperweek_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hoursperday_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        p_view_sg.setPreferredSize(new java.awt.Dimension(280, 440));
        p_view_sg.setLayout(new java.awt.GridBagLayout());
        jScrollPane3.setViewportView(p_view_sg);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("         VIEW                      ", jPanel2);

        insert_panel.setBackground(new java.awt.Color(102, 102, 102));
        insert_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insert_panelMouseClicked(evt);
            }
        });

        try{
            jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/imgs/TIME.jpg"))); // NOI18N
        }catch(Exception e){System.out.println(e);}

        jPanel8.setBackground(new java.awt.Color(153, 153, 153));

        //jLayeredPane2.setVisible(false);
        jLayeredPane2.setPreferredSize(new java.awt.Dimension(320, 436));

        add_studpanel.setBackground(new java.awt.Color(102, 102, 102));
        add_studpanel.setPreferredSize(new java.awt.Dimension(320, 436));

        add_stud.setBackground(new java.awt.Color(102, 102, 102));

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Student Group name");

        t_std_grp_name.setToolTipText("Please Enter the Batch Name");
        t_std_grp_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_std_grp_nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                focuslost(evt);
            }
        });
        t_std_grp_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_std_grp_nameActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("No of subjects");

        jLabel19.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 153));

        cb_no_subjects.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));

        b_submit_sg.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        b_submit_sg.setText("Submit");
        b_submit_sg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_submit_sgActionPerformed(evt);
            }
        });

        b_reset_sg.setText("reset");
        b_reset_sg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_reset_sgActionPerformed(evt);
            }
        });
        b_reset_sg.setVisible(false);

        javax.swing.GroupLayout add_studLayout = new javax.swing.GroupLayout(add_stud);
        add_stud.setLayout(add_studLayout);
        add_studLayout.setHorizontalGroup(
            add_studLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_studLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(add_studLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(add_studLayout.createSequentialGroup()
                        .addGroup(add_studLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b_submit_sg)
                            .addComponent(jLabel8))
                        .addGap(61, 61, 61)
                        .addGroup(add_studLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_reset_sg)
                            .addComponent(cb_no_subjects, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(add_studLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(t_std_grp_name, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_studLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        add_studLayout.setVerticalGroup(
            add_studLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_studLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(add_studLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(t_std_grp_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(add_studLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cb_no_subjects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(add_studLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_submit_sg)
                    .addComponent(b_reset_sg))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout add_studpanelLayout = new javax.swing.GroupLayout(add_studpanel);
        add_studpanel.setLayout(add_studpanelLayout);
        add_studpanelLayout.setHorizontalGroup(
            add_studpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_studpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(add_stud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        add_studpanelLayout.setVerticalGroup(
            add_studpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_studpanelLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(add_stud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        add_teachpanel.setBackground(new java.awt.Color(102, 102, 102));
        add_teachpanel.setPreferredSize(new java.awt.Dimension(300, 436));

        add_teach.setVisible(false);
        add_teach.setBackground(new java.awt.Color(102, 102, 102));

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Teacher Name");

        t_teacher_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_teacher_nameFocusLost(evt);
            }
        });

        cb_add_subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_add_subjectActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Calibri", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 204));

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Subject");

        jButton7.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButton7.setText("Submit");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout add_teachLayout = new javax.swing.GroupLayout(add_teach);
        add_teach.setLayout(add_teachLayout);
        add_teachLayout.setHorizontalGroup(
            add_teachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_teachLayout.createSequentialGroup()
                .addGroup(add_teachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(add_teachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_teacher_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_add_subject, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_teachLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_teachLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addGap(77, 77, 77))
        );
        add_teachLayout.setVerticalGroup(
            add_teachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_teachLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(add_teachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(t_teacher_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(add_teachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_add_subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout add_teachpanelLayout = new javax.swing.GroupLayout(add_teachpanel);
        add_teachpanel.setLayout(add_teachpanelLayout);
        add_teachpanelLayout.setHorizontalGroup(
            add_teachpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_teachpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(add_teach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(37, 37, 37))
        );
        add_teachpanelLayout.setVerticalGroup(
            add_teachpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_teachpanelLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(add_teach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        jLayeredPane2.setLayer(add_studpanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(add_teachpanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 324, Short.MAX_VALUE)
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(add_studpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(add_teachpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane2Layout.createSequentialGroup()
                    .addComponent(add_studpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(add_teachpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, Short.MAX_VALUE)
        );

        jPanel11.setLayout(new java.awt.GridBagLayout());
        jScrollPane1.setViewportView(jPanel11);

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setPreferredSize(new java.awt.Dimension(230, 440));

        jButton5.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButton5.setText("Add Teachers");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButton4.setText("Add Student Group");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jButton4)
                .addGap(55, 55, 55)
                .addComponent(jButton5)
                .addContainerGap(210, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout insert_panelLayout = new javax.swing.GroupLayout(insert_panel);
        insert_panel.setLayout(insert_panelLayout);
        insert_panelLayout.setHorizontalGroup(
            insert_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insert_panelLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(714, 714, 714)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        insert_panelLayout.setVerticalGroup(
            insert_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(insert_panelLayout.createSequentialGroup()
                .addGroup(insert_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("               INSERT                 ", insert_panel);

        try{
            jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/imgs/TIME.jpg"))); // NOI18N
        }catch(Exception e){System.out.println(e); }

        jPanel12.setBackground(new java.awt.Color(51, 51, 51));
        jPanel12.setForeground(new java.awt.Color(153, 153, 153));
        jPanel12.setPreferredSize(new java.awt.Dimension(230, 440));

        jButton9.setText("Days per week");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Hours per Day");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jButton9)
                .addGap(83, 83, 83)
                .addComponent(jButton10)
                .addContainerGap(193, Short.MAX_VALUE))
        );

        jLayeredPane1.setVisible(false);
        jLayeredPane1.setPreferredSize(new java.awt.Dimension(243, 600));

        days_perweekpanel.setBackground(new java.awt.Color(102, 102, 102));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Days per week");

        jButton13.setText("Submit");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7" }));

        javax.swing.GroupLayout days_perweekpanelLayout = new javax.swing.GroupLayout(days_perweekpanel);
        days_perweekpanel.setLayout(days_perweekpanelLayout);
        days_perweekpanelLayout.setHorizontalGroup(
            days_perweekpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(days_perweekpanelLayout.createSequentialGroup()
                .addGroup(days_perweekpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(days_perweekpanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel12)
                        .addGap(26, 26, 26)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(days_perweekpanelLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jButton13)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        days_perweekpanelLayout.setVerticalGroup(
            days_perweekpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(days_perweekpanelLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addGroup(days_perweekpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jButton13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        hours_perdaypanel.setBackground(new java.awt.Color(102, 102, 102));
        hours_perdaypanel.setPreferredSize(new java.awt.Dimension(243, 600));

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Hours per Day");

        jButton14.setText("Submit");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));

        javax.swing.GroupLayout hours_perdaypanelLayout = new javax.swing.GroupLayout(hours_perdaypanel);
        hours_perdaypanel.setLayout(hours_perdaypanelLayout);
        hours_perdaypanelLayout.setHorizontalGroup(
            hours_perdaypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hours_perdaypanelLayout.createSequentialGroup()
                .addGroup(hours_perdaypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hours_perdaypanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(hours_perdaypanelLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jButton14)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        hours_perdaypanelLayout.setVerticalGroup(
            hours_perdaypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hours_perdaypanelLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(hours_perdaypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(jButton14)
                .addContainerGap(365, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(days_perweekpanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(hours_perdaypanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(days_perweekpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(hours_perdaypanel, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(days_perweekpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(hours_perdaypanel, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("             UPDATE                 ", jPanel5);

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));

        jPanel15.setBackground(new java.awt.Color(51, 51, 51));
        jPanel15.setPreferredSize(new java.awt.Dimension(230, 440));

        jButton8.setText("Remove Student Group");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton11.setText("Remove Teacher");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jButton8)
                .addGap(57, 57, 57)
                .addComponent(jButton11)
                .addContainerGap(189, Short.MAX_VALUE))
        );

        jLayeredPane3.setVisible(false);

        remove_studpanel.setBackground(new java.awt.Color(102, 102, 102));
        remove_studpanel.setPreferredSize(new java.awt.Dimension(575, 438));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Student Group Name");

        jButton3.setText("Remove");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout remove_studpanelLayout = new javax.swing.GroupLayout(remove_studpanel);
        remove_studpanel.setLayout(remove_studpanelLayout);
        remove_studpanelLayout.setHorizontalGroup(
            remove_studpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remove_studpanelLayout.createSequentialGroup()
                .addGroup(remove_studpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(remove_studpanelLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel10)
                        .addGap(64, 64, 64)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(remove_studpanelLayout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jButton3)))
                .addContainerGap(362, Short.MAX_VALUE))
        );
        remove_studpanelLayout.setVerticalGroup(
            remove_studpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remove_studpanelLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addGroup(remove_studpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addComponent(jButton3)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        remove_teachpanel.setBackground(new java.awt.Color(102, 102, 102));

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Teacher Name");

        jButton12.setText("Remove");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout remove_teachpanelLayout = new javax.swing.GroupLayout(remove_teachpanel);
        remove_teachpanel.setLayout(remove_teachpanelLayout);
        remove_teachpanelLayout.setHorizontalGroup(
            remove_teachpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remove_teachpanelLayout.createSequentialGroup()
                .addGroup(remove_teachpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(remove_teachpanelLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel11)
                        .addGap(116, 116, 116)
                        .addComponent(cb_remove_teacher, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(remove_teachpanelLayout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jButton12)))
                .addContainerGap(245, Short.MAX_VALUE))
        );
        remove_teachpanelLayout.setVerticalGroup(
            remove_teachpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remove_teachpanelLayout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addGroup(remove_teachpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cb_remove_teacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(jButton12)
                .addContainerGap(196, Short.MAX_VALUE))
        );

        jLayeredPane3.setLayer(remove_studpanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(remove_teachpanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 741, Short.MAX_VALUE)
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                    .addComponent(remove_studpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                    .addComponent(remove_teachpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 83, Short.MAX_VALUE)))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                    .addComponent(remove_studpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                    .addComponent(remove_teachpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, 438, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("          REMOVE                   ", jPanel6);

        jPanel7.setBackground(new java.awt.Color(102, 102, 102));

        jButton1.setText("X");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebutton(evt);
            }
        });

        jButton2.setText("--");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Corbel", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("T GEN");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 827, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1)
                .addComponent(jButton2)
                .addComponent(jLabel2))
        );

        jLabel1.setText("Version 0.0.1");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closebutton(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebutton
        dispose();
    }//GEN-LAST:event_closebutton

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setState(this.ICONIFIED);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        //jLayeredPane2.setVisible(true);
        jScrollPane1.setVisible(true);
        add_teachpanel.setVisible(false);
        add_studpanel.setVisible(true);
        add_stud.setVisible(true);
        add_teach.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        threadgenInsertTeacherUI();
    
        //jLayeredPane2.setVisible(true);
        jScrollPane1.setVisible(false);
        add_studpanel.setVisible(false);
        add_teachpanel.setVisible(true);
        add_stud.setVisible(false);
        add_teach.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
                jLayeredPane1.setVisible(true);
                hours_perdaypanel.setVisible(false);
                days_perweekpanel.setVisible(true);

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        jLayeredPane1.setVisible(true);
        hours_perdaypanel.setVisible(true);
        days_perweekpanel.setVisible(false);
     
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
    threadUpdateDaysPerWeek();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
    threadUpdateHoursPerDay();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
           
      tg_validate(); //VALIDATION
    }//GEN-LAST:event_jButton7ActionPerformed

    private void b_submit_sgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_submit_sgActionPerformed
    
     sg_Validate();  //VALIDATION 
            
   // genInsertSGUI();//thread service not required
    }//GEN-LAST:event_b_submit_sgActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed


        threadGenRemoveSGUI();
        
        jLayeredPane3.setVisible(true);
        remove_teachpanel.setVisible(false);
        remove_studpanel.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        threadGenRemoveTeacherUI();
        jLayeredPane3.setVisible(true);
           remove_teachpanel.setVisible(true);
            remove_studpanel.setVisible(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void t_std_grp_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_std_grp_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_std_grp_nameActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

            threadRemoveSG();          
    }//GEN-LAST:event_jButton3ActionPerformed
   int xx=0;
   int yy=0;
    private void jpanelmouse_pressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpanelmouse_pressed
         xx=evt.getX();
         yy=evt.getY(); 
    }//GEN-LAST:event_jpanelmouse_pressed

    private void jpanelmouse_dragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpanelmouse_dragged
         int x=evt.getXOnScreen();
       int y=evt.getYOnScreen();
       this.setLocation(x-xx, y-yy);
    }//GEN-LAST:event_jpanelmouse_dragged

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed

        threadGenViewSGUI();
        jLayeredPane4.setVisible(true);
        viewstudent_panel.setVisible(true);
        viewteacher_panel.setVisible(false);
        viewdaysperweek_panel.setVisible(false);
        hoursperday_panel.setVisible(false);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
threadGenViewTeacher();    
        jLayeredPane4.setVisible(true);
        viewstudent_panel.setVisible(false);
        viewteacher_panel.setVisible(true);
        viewdaysperweek_panel.setVisible(false);
        hoursperday_panel.setVisible(false);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed

        threadGenViewDPWUI();
        jLayeredPane4.setVisible(true);
        viewstudent_panel.setVisible(false);
        viewteacher_panel.setVisible(false);
        viewdaysperweek_panel.setVisible(true);
        hoursperday_panel.setVisible(false);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        threadGenViewHPDUI();
        jLayeredPane4.setVisible(true);
        viewstudent_panel.setVisible(false);
        viewteacher_panel.setVisible(false);
        viewdaysperweek_panel.setVisible(false);
        hoursperday_panel.setVisible(true);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void b_reset_sgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_reset_sgActionPerformed

        clearSgPanel(0);     

    }//GEN-LAST:event_b_reset_sgActionPerformed

    private void b_submit_view_sgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_submit_view_sgActionPerformed
        
       threadViewSG();
        
    }//GEN-LAST:event_b_submit_view_sgActionPerformed

    private void focuslost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focuslost
       if(t_std_grp_name.getText().trim().isEmpty())
       {
           jLabel19.setText("Student Group name is empty");
       }
       else
          jLabel19.setText(" "); 
       
    }//GEN-LAST:event_focuslost

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        
        threadRemoveTeacher();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void b_reset_view_sgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_reset_view_sgActionPerformed
       
         clearSgPanel(1); 
    }//GEN-LAST:event_b_reset_view_sgActionPerformed

    private void t_view_hpdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_view_hpdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_view_hpdActionPerformed

    private void t_teacher_nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_teacher_nameFocusLost
        if(t_teacher_name.getText().trim().isEmpty())
       {
           jLabel13.setText("Student Group name is empty");
       }
       else
          jLabel13.setText(" "); 
    }//GEN-LAST:event_t_teacher_nameFocusLost

    private void insert_panelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_panelMouseClicked
        
    }//GEN-LAST:event_insert_panelMouseClicked

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
   
        t_std_grp_name.setText(" ");
        t_teacher_name.setText(" ");
        cb_no_subjects.setSelectedItem(null);
        cb_add_subject.setSelectedItem(null);
      
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void t_std_grp_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_std_grp_nameFocusGained
       jLabel19.setText(" ");
    }//GEN-LAST:event_t_std_grp_nameFocusGained

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked

    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void cb_add_subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_add_subjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_add_subjectActionPerformed
  
    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) throws FileNotFoundException {
     public static void init() throws FileNotFoundException {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseOp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseOp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseOp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseOp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
      
             /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseOp().setVisible(true);
      
            }
        });
    }
     
    public  void threadInsertStudentGroup()  
    {   
        
        WaitingOptionpane obj=new WaitingOptionpane();
        SwingWorker sw1 = new SwingWorker()  
        { 
            int ret=-1;
            
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               addStudentGroupData();
               return null;
            }    
             
  
            @Override
            protected void process(List chunks) 
            { 
                obj.disp("Inserting Student Group Details");                      
            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                JOptionPane.showMessageDialog(jPanel1, "Student Group Inserted Successfully","Successfull", JOptionPane.PLAIN_MESSAGE);
                
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }
     
    public  void threadInsertTeacher()  
    { 
  WaitingOptionpane obj=new WaitingOptionpane();
        SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               addTeacherData();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            { 
                // define what the event dispatch thread  
                // will do with the intermediate results received 
                // while the thread is executing 
                    // JOptionPane.showMessageDialog(jPanel1, "Data Inserted Successfully", "WARNING", JOptionPane.WARNING_MESSAGE);         
            
           obj.disp("Inserting Teacher Details");
 
                
            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                JOptionPane.showMessageDialog(jPanel1, "Teacher Inserted Successfully","Successfull", JOptionPane.PLAIN_MESSAGE);
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }
     
    public void threadUpdateDaysPerWeek()
    {
     WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               updateDaysPerWeek();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            {         
                obj.disp("Updating Days Per Week");
            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                JOptionPane.showMessageDialog(jPanel1, "Days Per Week Updated Successfully","Successfull", JOptionPane.PLAIN_MESSAGE);
            } 
        }; 
        sw1.execute();  
    }
     
    public void threadUpdateHoursPerDay()
    {
        WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               updateHoursPerDay();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            {      
            obj.disp("Updating Hours Per Day ");
            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                JOptionPane.showMessageDialog(jPanel1, "Hours Per Day Updated Successfully","Successfull", JOptionPane.PLAIN_MESSAGE);
            } 
        }; 
        sw1.execute();  
    }
    
    public void threadGenRemoveSGUI()
    {
        WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               genCBRemoveSGUI();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            {
             obj.disp("Fetching Student Group Details");
            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();             
            } 
        };  
        sw1.execute();  
    }
       
    public  void threadgenInsertTeacherUI()  
    { 
  WaitingOptionpane obj=new WaitingOptionpane();
        SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               genInsertTeacherUI();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            { 
            obj.disp("Fetching Subject Details");
    
            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag(); 
            } 
        }; 
        sw1.execute();  
    }
        
    public void threadGenRemoveTeacherUI()
    {
     WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               genCBRemoveTeacherUI();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            { 
                // define what the event dispatch thread  
                // will do with the intermediate results received 
                // while the thread is executing 
                    // JOptionPane.showMessageDialog(jPanel1, "Data Inserted Successfully", "WARNING", JOptionPane.WARNING_MESSAGE);         
             
                obj.disp("Fetching Teacher Details");

            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                // this method is called when the background
                // thread finishes execution
               
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }
   
    public void threadGenViewSGUI()
    {
     WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               genCBViewSGUI();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            { 
                // define what the event dispatch thread  
                // will do with the intermediate results received 
                // while the thread is executing 
                    // JOptionPane.showMessageDialog(jPanel1, "Data Inserted Successfully", "WARNING", JOptionPane.WARNING_MESSAGE);         
      
                 
                obj.disp("Fetching Student Group Details");
            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                // this method is called when the background
                // thread finishes execution
               
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }
   
    public void threadGenViewTeacher()
    {
        WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               genViewTeacher();  
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            { 
                // define what the event dispatch thread  
                // will do with the intermediate results received 
                // while the thread is executing 
                    // JOptionPane.showMessageDialog(jPanel1, "Data Inserted Successfully", "WARNING", JOptionPane.WARNING_MESSAGE);         
              obj.disp("Fetching Teacher Details");

            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                // this method is called when the background
                // thread finishes execution
               
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }    
    
    public void threadGenViewDPWUI()
    {
        WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               genViewDPWUI();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            { 
                // define what the event dispatch thread  
                // will do with the intermediate results received 
                // while the thread is executing 
                    // JOptionPane.showMessageDialog(jPanel1, "Data Inserted Successfully", "WARNING", JOptionPane.WARNING_MESSAGE);         
            obj.disp("Fetching Days Per Week Details");

            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                // this method is called when the background
                // thread finishes execution
               
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }
        
    public void threadGenViewHPDUI()
    {
        WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               genViewHPDUI();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            { 
                // define what the event dispatch thread  
                // will do with the intermediate results received 
                // while the thread is executing 
                    // JOptionPane.showMessageDialog(jPanel1, "Data Inserted Successfully", "WARNING", JOptionPane.WARNING_MESSAGE);         
            obj.disp("Fetching Hours Per Day Details");

            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                // this method is called when the background
                // thread finishes execution
               
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }    
        
    public void threadRemoveSG()
    {
        WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               removeSG();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            { 
                // define what the event dispatch thread  
                // will do with the intermediate results received 
                // while the thread is executing 
                    // JOptionPane.showMessageDialog(jPanel1, "Data Inserted Successfully", "WARNING", JOptionPane.WARNING_MESSAGE);         
       obj.disp("Removing Student Group Details");

            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                JOptionPane.showMessageDialog(jPanel1, "Removed Student Group Successfully","Successfull", JOptionPane.PLAIN_MESSAGE);               
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }

    public void threadRemoveTeacher()
    {
     WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               removeTeacher();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            { 
                // define what the event dispatch thread  
                // will do with the intermediate results received 
                // while the thread is executing 
                    // JOptionPane.showMessageDialog(jPanel1, "Data Inserted Successfully", "WARNING", JOptionPane.WARNING_MESSAGE);         
             obj.disp("Removing Teacher Details");

            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
                JOptionPane.showMessageDialog(jPanel1, "Removed Teacher Successfully","Successfull", JOptionPane.PLAIN_MESSAGE);
               
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }
    
    public void threadViewSG()
    {
        WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
               genViewSGUI();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            {         
            obj.disp("Fetching Student Group Details");
            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();               
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }
    
    public void threadViewTeacher()
    {
     WaitingOptionpane obj=new WaitingOptionpane();
     SwingWorker sw1 = new SwingWorker()  
        { 
  
            @Override
            protected String doInBackground() throws Exception  
            { 
               publish(); 
              genViewTeacher();
               return null; 
            }    
             
  
            @Override
            protected void process(List chunks) 
            {        
           obj.disp("Feetching Teacher Details");
            } 
  
            @Override
            protected void done()  
            { 
                obj.setflag();
            } 
        }; 
        // executes the swingworker on worker thread 
        sw1.execute();  
    }
    
 
    ////////////////////////////////////////////////////////////////////
    
    public void genInsertSGUI()
    { 
      int sgcount=Integer.parseInt(cb_no_subjects.getSelectedItem().toString());
      List<JTextField> subject_name = new ArrayList<JTextField>();
      List<JComboBox> subject_hours = new ArrayList<JComboBox>();
      List<JLabel> subject_no_label = new ArrayList<JLabel>();
      List<JLabel> subject_name_label = new ArrayList<JLabel>();
      List<JLabel> subject_hours_label = new ArrayList<JLabel>();
    
      JButton b_submit ;
      
      JPanel panel= jPanel11;
 //panel.setLayout(new GridBagLayout());
 
//remove all components in panel
      Integer indexer = 1;
for(int count = 0;count<sgcount;count++)
{
    
            // Create label and text field
            subject_no_label.add(new JLabel("Subject no : " + indexer));
            subject_name_label.add(new JLabel("Subject name :  "));
            subject_hours_label.add(new JLabel("Subject hours :  "));
            subject_name.add(new JTextField());
            subject_hours.add(new JComboBox());
            
              for(int z = 1;z<25;z++)
                subject_hours.get(count).addItem(z);
            // Create constraints
            GridBagConstraints sub_no_labelConstraints = new GridBagConstraints();
            GridBagConstraints sub_name_labelConstraints = new GridBagConstraints();
            GridBagConstraints sub_hours_labelConstraints = new GridBagConstraints();
            GridBagConstraints sub_name_textFieldConstraints = new GridBagConstraints();
            GridBagConstraints sub_hours_comboBoxConstraints = new GridBagConstraints();
            

            // Add labels and text fields
            for(int i = 0,j = 1,k = 0; i < indexer; i++,k=k+3)
            {    
                // Label constraints
                sub_no_labelConstraints.gridx = j;
                sub_no_labelConstraints.gridy = k;
                
                sub_name_labelConstraints.gridx = j+1;
                sub_name_labelConstraints.gridy = k+1;

                // Text field constraints
                sub_name_textFieldConstraints.gridx = j+2;
                sub_name_textFieldConstraints.gridy = k+1;
  
                sub_hours_labelConstraints.gridx = j+1;
                sub_hours_labelConstraints.gridy = k+2;
                
                sub_hours_comboBoxConstraints.gridx = j+2;
                sub_hours_comboBoxConstraints.gridy = k+2;
           
                subject_name.get(i).setColumns(5);
                
                
                
                // Add them to panel
                panel.add(subject_no_label.get(i), sub_no_labelConstraints);
                panel.add(subject_name_label.get(i), sub_name_labelConstraints);
                panel.add(subject_name.get(i), sub_name_textFieldConstraints);
                panel.add(subject_hours_label.get(i), sub_hours_labelConstraints);
                panel.add(subject_hours.get(i), sub_hours_comboBoxConstraints);
             
            }

            // Align components top-to-bottom
            GridBagConstraints c = new GridBagConstraints();
            c.gridx = 0;
            c.gridy = 10;
            c.weighty = 0;
            panel.add(new JLabel(), c);

            // Increment indexer
            indexer++;
            
        
}
  
    GridBagConstraints submit_button_Constraints = new GridBagConstraints();
    submit_button_Constraints.gridx=2;
    submit_button_Constraints.gridy=10000;
    
    b_submit = new JButton("Submit");
    b_submit.setPreferredSize(new Dimension(80, 40));
  
    b_submit.addActionListener(new ActionListener() {

    @Override
    public void actionPerformed(ActionEvent e)
    {
    subject_name_list=subject_name;
    subject_hours_list=subject_hours;
    
           ArrayList sub_list = new ArrayList();
       String sub_name = null;
       
       for(int i=0;i<subject_name_list.size();i++)
       {
                sub_name = subject_name_list.get(i).getText().toUpperCase();
 
                if(!sub_list.contains(sub_name))
                sub_list.add(sub_name);
                else 
                {
                JOptionPane.showMessageDialog(null, "Subject repeated,Please make sure information given are accurate");
                return;
                }
                
                if(sub_list.contains(""))
                {
                JOptionPane.showMessageDialog(null, "Subject names should not be empty"); 
                return;
                }
       }
    
    
    threadInsertStudentGroup();   
    }
    });


    panel.add(b_submit,submit_button_Constraints);
    b_submit_sg.setVisible(false);
    b_reset_sg.setVisible(true);
    
    }
    
    public void genInsertTeacherUI() throws FileNotFoundException, InterruptedException
    {
           
                ArrayList sub_list = new ArrayList();
                final FirebaseDatabase database = FirebaseDatabase.getInstance();
                DatabaseReference ref = database.getReference("studentgroup");               
                   ref.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {
                        teacher_count = Integer.parseInt((String) dataSnapshot.child("count").getValue());                  
                        
                        for(int i=1;i<=teacher_count;i++)
                        {
                        int sub_count= Integer.valueOf(dataSnapshot.child("studentgroup:"+i).child("subjectno").getValue().toString());   
                        for(int j=1;j<=sub_count;j++)
                        sub_list.add(dataSnapshot.child("studentgroup:"+i).child("subjects").child("subject:"+j).child("name").getValue().toString());
                        }
                        
                        Set<String> set = new HashSet<>(sub_list);
                        sub_list.clear();
                        sub_list.addAll(set);
                        
                        for(int h=0;h<sub_list.size();h++)
                        cb_add_subject.addItem((String) sub_list.get(h));
                    flag=1;
                    }
                    
                    @Override
                    public void onCancelled(DatabaseError databaseError) {
                        System.out.println("Error");// ...
                    }
                });

                   
    time();
    flag=0;
    }
 
    public void genViewSGUI() throws InterruptedException
    { 
     

      List<JTextField> subject_name = new ArrayList<JTextField>();
      List<JTextField> subject_hours = new ArrayList<JTextField>();
      List<JLabel> subject_no_label = new ArrayList<JLabel>();
      List<JLabel> subject_name_label = new ArrayList<JLabel>();
      List<JLabel> subject_hours_label = new ArrayList<JLabel>();
    
  
       
      JPanel panel= p_view_sg;

  String sg_name=cb_view_sg.getSelectedItem().toString();
  final FirebaseDatabase database = FirebaseDatabase.getInstance();
  DatabaseReference ref = database.getReference("studentgroup");
  ref.addListenerForSingleValueEvent(new ValueEventListener() {
      @Override
      public void onDataChange(DataSnapshot dataSnapshot) {
          stg_count = Integer.parseInt((String) dataSnapshot.child("count").getValue());
          Integer indexer = 1;
          for(int a = 1; a <= stg_count ; a++)
          {
              if(dataSnapshot.child("studentgroup:"+a).child("name").getValue().equals(sg_name))
              {
                  int sub_count = Integer.valueOf(dataSnapshot.child("studentgroup:"+a).child("subjectno").getValue().toString());
                  
                  
                  
                  for(int count = 1;count<=sub_count;count++)
                  {
                      
                      // Create label and text field
                      subject_no_label.add(new JLabel("Subject no : " + indexer));
                      subject_name_label.add(new JLabel("Subject name :  "));
                      subject_hours_label.add(new JLabel("Subject hours :  "));
                      
                      
                      subject_name.add(new JTextField((String) dataSnapshot.child("studentgroup:"+a).child("subjects").child("subject:"+count).child("name").getValue()));
                      subject_hours.add(new JTextField((String) dataSnapshot.child("studentgroup:"+a).child("subjects").child("subject:"+count).child("hours").getValue()));
                      
                      
                      // Create constraints
                      GridBagConstraints sub_no_labelConstraints = new GridBagConstraints();
                      GridBagConstraints sub_name_labelConstraints = new GridBagConstraints();
                      GridBagConstraints sub_hours_labelConstraints = new GridBagConstraints();
                      GridBagConstraints sub_name_textFieldConstraints = new GridBagConstraints();
                      GridBagConstraints sub_hours_comboBoxConstraints = new GridBagConstraints();
                      
                      
                      // Add labels and text fields
                      for(int i = 0,j = 1,k = 0; i < indexer; i++,k=k+3)
                      {
                          // Label constraints
                          sub_no_labelConstraints.gridx = j;
                          sub_no_labelConstraints.gridy = k;
                          
                          sub_name_labelConstraints.gridx = j+1;
                          sub_name_labelConstraints.gridy = k+1;
                          
                          
                          sub_name_textFieldConstraints.gridx = j+2;
                          sub_name_textFieldConstraints.gridy = k+1;
                          
                          sub_hours_labelConstraints.gridx = j+1;
                          sub_hours_labelConstraints.gridy = k+2;
                          
                          sub_hours_comboBoxConstraints.gridx = j+2;
                          sub_hours_comboBoxConstraints.gridy = k+2;
                          
                          subject_name.get(i).setColumns(5);
                          subject_hours.get(i).setColumns(5);
                          
                          subject_name.get(i).setEditable(false);
                          subject_hours.get(i).setEditable(false);
                          
                          // Add them to panel
                          panel.add(subject_no_label.get(i), sub_no_labelConstraints);
                          panel.add(subject_name_label.get(i), sub_name_labelConstraints);
                          panel.add(subject_name.get(i), sub_name_textFieldConstraints);
                          panel.add(subject_hours_label.get(i), sub_hours_labelConstraints);
                          panel.add(subject_hours.get(i), sub_hours_comboBoxConstraints);
                          
                      }
                      
                      // Align components top-to-bottom
                      GridBagConstraints c = new GridBagConstraints();
                      c.gridx = 0;
                      c.gridy = 10;
                      c.weighty = 0;
                      panel.add(new JLabel(), c);
                      
                      // Increment indexer
                      indexer++;
                      
                      
                  }
                  
              }
          }
          flag=1;
      }
      
      @Override
      public void onCancelled(DatabaseError databaseError) {
          System.out.println("Error");// ...
      }
      
  });
      time();
      flag=0;
    b_submit_view_sg.setVisible(false);
    b_reset_view_sg.setVisible(true);
    }
        
    public void genViewTeacher() throws InterruptedException, FileNotFoundException
    {
        Teacher_Table obj = new Teacher_Table();
        obj.createGUI(p_view_teacher);
    }
    
    public void genViewDPWUI() throws InterruptedException, FileNotFoundException
    { 
                final FirebaseDatabase database = FirebaseDatabase.getInstance();
                DatabaseReference ref = database.getReference("basic");
                ref.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {

                    String sgname = (String) dataSnapshot.child("daysperweek").getValue();
                    t_view_dpw.setText(sgname);
                    flag=1;
                    }
                    
                    @Override
                    public void onCancelled(DatabaseError databaseError) {
                        System.out.println("Error");// ...
                    }                 
                });
            time();
            flag=0;
    }
    
    public void genViewHPDUI() throws InterruptedException, FileNotFoundException
    { 
                final FirebaseDatabase database = FirebaseDatabase.getInstance();
                DatabaseReference ref = database.getReference("basic");
                ref.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {

                    String hpd = (String) dataSnapshot.child("hoursperday").getValue();
                    t_view_hpd.setText(hpd);
                    flag=1;
                    }
                    
                    @Override
                    public void onCancelled(DatabaseError databaseError) {
                        System.out.println("Error");// ...
                    }
                    
                });
            time();
            flag=0;
    }

    public void genCBRemoveSGUI() 
    {
      
        jComboBox3.removeAllItems();
        final FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference ref = database.getReference("studentgroup");
        ref.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                stg_count = Integer.parseInt((String) dataSnapshot.child("count").getValue());
                
                for(int i = 1; i <= stg_count ; i++)
                {
                    String sgname = (String) dataSnapshot.child("studentgroup:"+i).child("name").getValue();
                    jComboBox3.addItem(sgname);
                }
            }
            
            @Override
            public void onCancelled(DatabaseError databaseError) {
                System.out.println("Error");// ...
            }
            
        });

    }
    
    public void genCBRemoveTeacherUI() 
    {
      
        cb_remove_teacher.removeAllItems();
        final FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference ref = database.getReference("teacher");
        ref.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                teacher_count = Integer.parseInt((String) dataSnapshot.child("count").getValue());
                
                for(int i = 1; i <= teacher_count ; i++)
                {
                    String teacher_name = (String) dataSnapshot.child("teacher:"+i).child("name").getValue();
                    cb_remove_teacher.addItem(teacher_name);
                }
            }
            
            @Override
            public void onCancelled(DatabaseError databaseError) {
                System.out.println("Error");// ...
            }
            
        });

    }
    
    public void genCBViewSGUI() throws InterruptedException 
    {
      
        cb_view_sg.removeAllItems();
        final FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference ref = database.getReference("studentgroup");
        ref.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                stg_count = Integer.parseInt((String) dataSnapshot.child("count").getValue());
                
                for(int i = 1; i <= stg_count ; i++)
                {
                    String sgname = (String) dataSnapshot.child("studentgroup:"+i).child("name").getValue();
                    cb_view_sg.addItem(sgname);
                }
                flag=1;
            }
            
            @Override
            public void onCancelled(DatabaseError databaseError) {
                System.out.println("Error");// ...
            }
            
        });
time();
flag=0;
    }
    
    /////////////////////////////////////////////////////////////////////
    
    public int addStudentGroupData() 
    {
        

           
        try {                        
                final FirebaseDatabase database = FirebaseDatabase.getInstance();
                DatabaseReference ref = database.getReference("studentgroup");

                ref.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {
                      stg_count = Integer.parseInt((String) dataSnapshot.child("count").getValue());    
                      flag=1;
                    }
                    
                    @Override
                    public void onCancelled(DatabaseError databaseError) {
                        System.out.println("Error");// ...
                    }
                    
                });
                time();
                flag=0;
                
                
                DatabaseReference stdgrpref = ref.child("studentgroup:"+(stg_count+1));
                DatabaseReference subjectref = stdgrpref.child("subjects");
                
                Map<String, String> studentgroup = new HashMap<>();
                studentgroup.put("name",t_std_grp_name.getText().toUpperCase());
                
                int count =Integer.parseInt(cb_no_subjects.getSelectedItem().toString());
                studentgroup.put("subjectno",String.valueOf(count));
                
                stdgrpref.setValueAsync(studentgroup);
                
                
                for(int i = 1; i <= count ; i++)
                {   
                DatabaseReference subref = subjectref.child("subject:"+i);
  
                Map<String, String> subject = new HashMap<>();
                subject.put("name",subject_name_list.get(i-1).getText().toUpperCase());
                subject.put("hours",String.valueOf(subject_hours_list.get(i-1).getSelectedItem()));
                subref.setValueAsync(subject); 
               
                if(i==count)
                    flag=1;
                }         
                
                time();
                flag=0;
                
                ref.child("count").setValueAsync(String.valueOf(stg_count+1)); 
           
            } catch (InterruptedException ex) {
            Logger.getLogger(DatabaseOp.class.getName()).log(Level.SEVERE, null, ex);
        }   
          return 0;      
    }
    
    public void addTeacherData() throws InterruptedException, InterruptedException
    {
        final FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference ref = database.getReference("teacher");
        //DatabaseReference usersRef = ref.child("users");
        ref.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                teacher_count = Integer.parseInt((String) dataSnapshot.child("count").getValue());
                for(int i=1;i<=teacher_count;i++)
                {
                    cb_add_subject.addItem((String) dataSnapshot.child("teacher:"+i).child("subject").getValue());
                }
                flag=1;
            }
            
            @Override
            public void onCancelled(DatabaseError databaseError) {
                System.out.println("Error");// ...
            }
        });
        
        time();
        flag=0;
        
        DatabaseReference teacherref = ref.child("teacher:"+(teacher_count+1));
        Map<String, String> subject = new HashMap<>();
        subject.put("name",t_teacher_name.getText().toUpperCase());
        subject.put("subject",cb_add_subject.getSelectedItem().toString());
        teacherref.setValueAsync(subject);
        ref.child("count").setValueAsync(String.valueOf(teacher_count+1));

    }
    
    public void updateDaysPerWeek()
    {
        final FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference ref = database.getReference("basic");
        String s_days = jComboBox2.getSelectedItem().toString();
        ref.child("daysperweek").setValueAsync(s_days);
    }
    
    public void updateHoursPerDay()
    {
        final FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference ref = database.getReference("basic");
        String s_hours = jComboBox1.getSelectedItem().toString();
        ref.child("hoursperday").setValueAsync(s_hours);
    }
    
    public void removeSG() throws InterruptedException
    {
       
        String sg_name=jComboBox3.getSelectedItem().toString();
        final FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference sgref = database.getReference("studentgroup");
        sgref.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                stg_count = Integer.parseInt((String) dataSnapshot.child("count").getValue());
                int f_count=0;
                for(int i = 1; i <= stg_count ; i++)         
                {
                    if(dataSnapshot.child("studentgroup:"+i).child("name").getValue().equals(sg_name))
                    {
                        sgref.child("studentgroup:"+i).removeValueAsync();
                        f_count=1;
                    }
                    
                    if(f_count==1 && i<stg_count)
                    {
                        sgref.child("studentgroup:"+i).child("demo").setValueAsync("demo");
                        DatabaseReference new_node_ref = sgref.child("studentgroup:"+i);
                        DatabaseReference next_node_ref = sgref.child("studentgroup:"+(i+1));
                        
                        next_node_ref.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(DataSnapshot dataSnapshot) {
                                Map<String, String> sg = new HashMap<>();
                                String na =dataSnapshot.child("name").getValue().toString() ;
                                String sno =dataSnapshot.child("subjectno").getValue().toString();
                                sg.put("name",na);
                                sg.put("subjectno",sno);
                                new_node_ref.setValueAsync(sg);
                                for(int i = 1; i <= Integer.parseInt(dataSnapshot.child("subjectno").getValue().toString()) ; i++)
                                {
                                    Map<String, String> sub = new HashMap<>();
                                    String sub_name=dataSnapshot.child("subjects").child("subject:"+i).child("name").getValue().toString();
                                    String sub_hours=dataSnapshot.child("subjects").child("subject:"+i).child("hours").getValue().toString();
                                    sub.put("name",sub_name );
                                    sub.put("hours",sub_hours);
                                    
                                    new_node_ref.child("subjects").child("subject:"+i).setValueAsync(sub);
                                    next_node_ref.removeValueAsync();
                                }

                            }
                            @Override
                            public void onCancelled(DatabaseError databaseError) {
                                System.out.println("Error");// ...
                            }
                        });
                    }   
                                sgref.child("count").setValueAsync(String.valueOf(stg_count-1));
                                flag=1;
                }
            }
            @Override
            public void onCancelled(DatabaseError databaseError) {
                System.out.println("Error");// ...
            }
        });
        time();
        flag=0;
    }
    
    public void removeTeacher() throws InterruptedException
    {
       
        String sg_name=cb_remove_teacher.getSelectedItem().toString();
        final FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference teacher_ref = database.getReference("teacher");
        teacher_ref.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                teacher_count = Integer.parseInt((String) dataSnapshot.child("count").getValue());
                int f_count=0;
                for(int i = 1; i <= teacher_count ; i++)         
                {
                    if(dataSnapshot.child("teacher:"+i).child("name").getValue().equals(sg_name))
                    {
                        teacher_ref.child("teacher:"+i).removeValueAsync();
                        f_count=1;
                    }
                    
                    if(f_count==1 && i<teacher_count)
                    {
                        teacher_ref.child("teacher:"+i).child("demo").setValueAsync("demo");
                        DatabaseReference new_node_ref = teacher_ref.child("teacher:"+i);
                        DatabaseReference next_node_ref = teacher_ref.child("teacher:"+(i+1));
                        
                        next_node_ref.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(DataSnapshot dataSnapshot) {
                                Map<String, String> teacher = new HashMap<>();
                                String na =dataSnapshot.child("name").getValue().toString() ;
                                String sname =dataSnapshot.child("subject").getValue().toString();
                                teacher.put("name",na);
                                teacher.put("subject",sname);
                                new_node_ref.setValueAsync(teacher);
                                next_node_ref.removeValueAsync();
                                
                            }
                            @Override
                            public void onCancelled(DatabaseError databaseError) {
                                System.out.println("Error");// ...
                            }
                        });
                    }
                      teacher_ref.child("count").setValueAsync(String.valueOf(teacher_count-1));
                      flag=1;
                }
            }
            @Override
            public void onCancelled(DatabaseError databaseError) {
                System.out.println("Error");// ...
            }
        });
        time();
        flag=0;
    }
    
    ////////////////////////////////////////////////////////////////////////////////
    
    public void clearSgPanel(int f)
    {
        if(f==0)
        {
    jPanel11.removeAll();
    jPanel11.revalidate();
    jPanel11.repaint();
    b_reset_sg.setVisible(false);
    b_submit_sg.setVisible(true);
        }
        else if(f==1)
        {
    p_view_sg.removeAll();
    p_view_sg.revalidate();
    p_view_sg.repaint();
    b_reset_view_sg.setVisible(false);
    b_submit_view_sg.setVisible(true);
        }
        }
    
    public  void time() throws InterruptedException
    {
            if(flag==0)
            {   
                TimeUnit.SECONDS.sleep(6); 
                time();
            }
    }
     
  //////////////////////////////////////////////////////////////////////////
    //(VALIDATION)
    
    public void sg_Validate()
    {
         Pattern pattern = Pattern.compile("[a-zA-Z0-9_-]*");
         Matcher matcher = pattern.matcher(t_std_grp_name.getText());
         
         if((t_std_grp_name.getText().trim().isEmpty())&&(!(t_std_grp_name.getText().contains(" "))))
         {
             jLabel19.setText("Student Group name is Empty");
           JOptionPane.showMessageDialog(null, "Please Enter valid Name");
         }
         else if ((!matcher.matches()))
         {
              
                     jLabel19.setText("Student Group name is Invalid");
                     JOptionPane.showMessageDialog(null, "Please Enter valid Name");
               
         }
         
         else
         { 
         jLabel19.setText(" ");
         genInsertSGUI();
         }
         

    }
    
    
    public void tg_validate()
    {
     Pattern pattern = Pattern.compile("[a-zA-Z_-]*");
         Matcher matcher = pattern.matcher(t_teacher_name.getText());
         
         if(t_teacher_name.getText().trim().isEmpty())
         {
             jLabel13.setText("Student Group name is Empty");
           JOptionPane.showMessageDialog(null, "Please Enter valid Name");
         }
         else if ((!matcher.matches()))
             
            {
                  if(t_teacher_name.getText().contains(" "))
                    {
                         jLabel13.setText(" ");
                         threadInsertTeacher();
                         
                    }
                  else
                  {
                        jLabel13.setText("Student Group name is Invalid");
                        JOptionPane.showMessageDialog(null, "Please Enter valid Name");
                  }
               
            }
         
         else
         {
          jLabel13.setText(" ");
          threadInsertTeacher();
          
         }
         

    }
    //////////////////////////////////////////////////////////////////
    ///CLEAR PANEL

       
   
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel add_stud;
    private javax.swing.JPanel add_studpanel;
    private javax.swing.JPanel add_teach;
    private javax.swing.JPanel add_teachpanel;
    private javax.swing.JButton b_reset_sg;
    private javax.swing.JButton b_reset_view_sg;
    private javax.swing.JButton b_submit_sg;
    private javax.swing.JButton b_submit_view_sg;
    private javax.swing.JComboBox<String> cb_add_subject;
    private javax.swing.JComboBox<String> cb_no_subjects;
    private javax.swing.JComboBox<String> cb_remove_teacher;
    private javax.swing.JComboBox<String> cb_view_sg;
    private javax.swing.JPanel days_perweekpanel;
    private javax.swing.JPanel hours_perdaypanel;
    private javax.swing.JPanel hoursperday_panel;
    private javax.swing.JPanel insert_panel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel p_view_sg;
    private javax.swing.JPanel p_view_teacher;
    private javax.swing.JPanel remove_studpanel;
    private javax.swing.JPanel remove_teachpanel;
    private javax.swing.JTextField t_std_grp_name;
    private javax.swing.JTextField t_teacher_name;
    private javax.swing.JTextField t_view_dpw;
    private javax.swing.JTextField t_view_hpd;
    private javax.swing.JPanel viewdaysperweek_panel;
    private javax.swing.JPanel viewstudent_panel;
    private javax.swing.JPanel viewteacher_panel;
    // End of variables declaration//GEN-END:variables
}
